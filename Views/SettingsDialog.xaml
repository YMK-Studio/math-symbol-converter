<UserControl
    x:Class="MathSymbolConverter.Views.SettingsDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MathSymbolConverter.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    x:Name="SettingsDialogUC"
    d:DesignHeight="525"
    d:DesignWidth="490"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="Width" Value="700" />
            <Setter Property="Height" Value="565" />
            <Setter Property="Icon" Value="pack://application:,,,/Resources/Alpha_uc_lc.ico" />
        </Style>
    </prism:Dialog.WindowStyle>
    <UserControl.Resources>
        <converters:ResourceNameToPathConverter x:Key="ResourceNameToPathConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:StringToBoolConverter x:Key="StringToBoolConverter" />
        <converters:StringToInverseBoolConverter x:Key="StringToInverseBoolConverter" />
        <converters:StringToDoubleConverter x:Key="StringToDoubleConverter" />
        <converters:StringToIntConverter x:Key="StringToIntConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0" Margin="10,10,10,0">
            <TabItem Header="Aliases">
                <ListBox
                    Grid.Row="0"
                    Margin="5"
                    BorderThickness="0"
                    ItemsSource="{Binding Symbols}"
                    KeyboardNavigation.TabNavigation="Continue"
                    ScrollViewer.CanContentScroll="False">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border
                                            x:Name="Bd"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                            <ContentPresenter
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="70" />
                                    <RowDefinition Height="10" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="15" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    Enter backspace('/'), type
                                </TextBlock>
                                <TextBox
                                    Grid.Column="3"
                                    Width="100"
                                    Height="30"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    MaxLength="10"
                                    Text="{Binding Alias, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                <TextBlock
                                    Grid.Column="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    , then press [TAB], and it will be replaced with
                                </TextBlock>
                                <Label
                                    Grid.Column="7"
                                    Width="48"
                                    Height="48"
                                    Padding="0"
                                    HorizontalAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center">

                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="36"
                                        Text="{Binding Name}" />
                                </Label>

                                <!--<Image
                                    Grid.Column="7"
                                    Width="48"
                                    Height="48"
                                    HorizontalAlignment="Center"
                                    gif:ImageBehavior.AnimatedSource="{Binding FileName, Mode=OneWay, Converter={StaticResource ResourceNameToPathConverter}}" />-->
                                <Separator Grid.Row="1" Grid.ColumnSpan="9" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </TabItem>
            <TabItem Header="Advanced">
                <ScrollViewer Margin="6">
                    <StackPanel Margin="20" Orientation="Vertical">
                        <GroupBox Header="Pop-up Image">
                            <Grid Margin="20">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <CheckBox
                                    x:Name="PopupCheckBox"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Content="Display a pop-up image when text conversion is possible."
                                    IsChecked="{Binding Configs[0].Value, Converter={StaticResource StringToBoolConverter}, Mode=TwoWay}" />
                                <Separator
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    VerticalAlignment="Center" />
                                <Grid Grid.Row="2" IsEnabled="{Binding ElementName=PopupCheckBox, Path=IsChecked}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="40" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="Size" />
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="Location" />
                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="Opacity" />
                                    <TextBlock
                                        Grid.Row="3"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Text="Color" />
                                    <Slider
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        IsSnapToTickEnabled="True"
                                        Maximum="315"
                                        Minimum="15"
                                        TickFrequency="15"
                                        TickPlacement="BottomRight"
                                        Value="{Binding Configs[1].Value, Converter={StaticResource StringToDoubleConverter}, Mode=TwoWay}" />
                                    <ComboBox
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        SelectedIndex="{Binding Configs[2].Value, Converter={StaticResource StringToIntConverter}, Mode=TwoWay}">
                                        <ListBoxItem Content="Top left" />
                                        <ListBoxItem Content="Bottom left" />
                                        <ListBoxItem Content="Top right" />
                                        <ListBoxItem Content="Bottom right" />
                                        <ListBoxItem Content="Center" />
                                    </ComboBox>
                                    <Slider
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        IsSnapToTickEnabled="True"
                                        Maximum="1"
                                        Minimum="0"
                                        TickFrequency="0.05"
                                        TickPlacement="BottomRight"
                                        Value="{Binding Configs[3].Value, Converter={StaticResource StringToDoubleConverter}, Mode=TwoWay}" />
                                    <StackPanel
                                        Grid.Row="3"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">
                                        <RadioButton
                                            x:Name="BlackRadioButton"
                                            IsChecked="{Binding Configs[4].Value, Converter={StaticResource StringToBoolConverter}, Mode=TwoWay}">
                                            Black
                                        </RadioButton>
                                        <RadioButton
                                            Margin="30,0,0,0"
                                            IsChecked="{Binding Configs[4].Value, Converter={StaticResource StringToInverseBoolConverter}, Mode=TwoWay}">
                                            White
                                        </RadioButton>
                                    </StackPanel>
                                    <Button
                                        Grid.Row="4"
                                        Grid.ColumnSpan="2"
                                        Width="90"
                                        Height="30"
                                        Command="{Binding OpenPopupInPreviewCommand}"
                                        Content="Preview"
                                        IsEnabled="{Binding CanPopupPreview}" />
                                </Grid>

                            </Grid>
                        </GroupBox>
                        <GroupBox Margin="0,10,0,0" Header="Reset">
                            <StackPanel Margin="20" Orientation="Vertical">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <!--<RowDefinition Height="40" />
                                        <RowDefinition Height="40" />-->
                                    </Grid.RowDefinitions>
                                    <!--<StackPanel
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Orientation="Horizontal">
                                        <TextBlock VerticalAlignment="Center" Text="Input delay (" />
                                        <TextBlock VerticalAlignment="Center" Text="{Binding ElementName=DelayTimeSlider, Path=Value}" />
                                        <TextBlock VerticalAlignment="Center" Text="ms)" />
                                    </StackPanel>
                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.ColumnSpan="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        FontSize="10"
                                        Text="If the text conversion doesn't work properly, try increasing the number." />
                                    <Slider
                                        x:Name="DelayTimeSlider"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        IsSnapToTickEnabled="True"
                                        Maximum="100"
                                        Minimum="0"
                                        TickFrequency="5"
                                        TickPlacement="BottomRight"
                                        Value="{Binding Configs[4].Value, Converter={StaticResource StringToDoubleConverter}, Mode=TwoWay}" />-->
                                    <Button
                                        Grid.Row="2"
                                        Grid.ColumnSpan="2"
                                        Width="120"
                                        Height="30"
                                        VerticalAlignment="Center"
                                        Command="{Binding ResetSettingsCommand}"
                                        Content="Reset all settings" />
                                </Grid>

                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
        <Grid
            x:Name="SaveButtonGrid"
            Grid.Row="1"
            Height="70">
            <Button
                Width="100"
                Height="30"
                VerticalAlignment="Center"
                Command="{Binding SaveSettingsCommand}"
                Content="Save" />
        </Grid>
    </Grid>
</UserControl>
